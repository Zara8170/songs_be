buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.0'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'org.flywaydb.flyway' version '8.5.0'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

configurations {
    all {
        exclude group: 'commons-logging', module: 'commons-logging'
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'com.vladmihalcea:hibernate-types-60:2.21.1'
    implementation 'org.hibernate.orm:hibernate-core:6.4.4.Final'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'com.google.api-client:google-api-client:1.34.0'
    implementation 'com.google.http-client:google-http-client-jackson2:1.44.1'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    runtimeOnly 'com.mysql:mysql-connector-j'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // QueryDsl
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta"
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"

    // elasticsearch
    implementation 'co.elastic.clients:elasticsearch-java:8.13.4'

    // validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // jwt
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // dotenv
    implementation 'io.github.cdimascio:java-dotenv:5.1.1'

    // swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'

    // security
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // rabbitmq
    implementation 'org.springframework.boot:spring-boot-starter-amqp'

    // actuator + prometheus
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'

    // structured logging (JSON)
    implementation 'net.logstash.logback:logstash-logback-encoder:7.4'

    // aws s3
//    implementation 'io.awspring.cloud:spring-cloud-aws-starter-s3:3.0.4'

    // 날짜/시간 타입 읽기 위한 솔루션
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

    // flyway
//    implementation 'org.flywaydb:flyway-core:10.23.0'
}

tasks.named('test') {
    useJUnitPlatform()
}

// === ⭐ QueryDSL 빌드 옵션 (선택) ===
def querydslDir = "$buildDir/generated/querydsl"

sourceSets {
    main.java.srcDirs += [querydslDir]
}

tasks.withType(JavaCompile) {
    options.getGeneratedSourceOutputDirectory().set(file(querydslDir))
}

// clean 태스크 실행 시 생성된 Q클래스 삭제 (사용 중인 경우)
clean {
    delete file(querydslDir)
}


// plain - jar 생략
jar {
    enabled = false
}

// bootJar - 중복 제거
tasks.named('bootJar') {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

// bootWar - 중복 제거
tasks.named('jar') {
    enabled = false
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}
